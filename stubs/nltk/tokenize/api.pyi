from abc import ABC, abstractmethod
from collections.abc import Iterator

class TokenizerI(ABC):
    @abstractmethod
    def tokenize(self, s: str) -> list[str]: ...
    def span_tokenize(self, s: str) -> Iterator[tuple[int, int]]: ...
    def tokenize_sents(self, strings: list[str]) -> list[list[str]]: ...
    def span_tokenize_sents(
        self, strings: list[str]
    ) -> Iterator[list[tuple[int, int]]]: ...
